plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
}

version = project.version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name 'Xander Maven'
        url 'https://maven.isxander.dev/releases'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${stonecutter.current.project}"
    mappings "net.fabricmc:yarn:${property('yarn_mappings')}:v2"
    modImplementation "net.fabricmc:fabric-loader:${property('loader_version')}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${property('fabric_version')}"
    modImplementation("com.terraformersmc:modmenu:${property('modmenu_version')}")
    modImplementation("dev.isxander:yet-another-config-lib:${property('yacl_version')}")
}

processResources {
    inputs.property("minecraft_version", stonecutter.current.project)
    inputs.property("loader_version", loader_version)
    inputs.property("version", version)

    filesMatching("fabric.mod.json") {
        expand "minecraft_version": stonecutter.current.version,
                "version": version,
                "loader_version": loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    withSourcesJar()
    def java = stonecutter.eval(minecraft_version, ">=1.20.5")
            ? JavaVersion.VERSION_21 : JavaVersion.VERSION_17
    targetCompatibility = java
    sourceCompatibility = java
}

jar {
    archiveBaseName.set("${project.archives_base_name}-${stonecutter.current.project}")
    archiveVersion.set(project.version)
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
    }
}

loom {
    runConfigs.all {
        ideConfigGenerated true
        runDir "../../run"
    }
}